---
import type { MarkdownLayoutProps } from "astro";

type Props = MarkdownLayoutProps<{
  title: string;
  original?: boolean;
  status?: string;
}>;

import "./Page.scss";
import "@components/color-table.scss";
import Layout from "./Layout.astro";
import Kpm from "../components/Kpm.astro";
import Header from "../components/Header.astro";
import Sidebar from "@components/Sidebar.astro";
import MissingTranslation from "@components/MissingTranslation.astro";
import { getLangFromUrl, useTranslations } from "src/i18n/utils";
import type { Props as LayoutProps } from "./Layout.astro";

const { frontmatter } = Astro.props;
const t = useTranslations(getLangFromUrl(Astro.url));
const metaTags: LayoutProps["meta"] = {
  robots: frontmatter.status === "empty" ? "noindex,nofollow" : undefined,
};
---

<Layout title={frontmatter.title} meta={metaTags}>
  <div class="kth-a11y-nav">
    <a href="#kth-main">{t("nav.main-content")}</a>
  </div>
  <Kpm />
  <Header />
  <div class="kth-content">
    <Sidebar />
    <main id="kth-main">
      {
        frontmatter.original === false && frontmatter.status === "empty" && (
          <MissingTranslation />
        )
      }
      <article>
        <slot />
      </article>
    </main>
  </div>
  <script>
    import { ColorTable } from "@components/color-table.ts";

    window.customElements.define("styleweb-color-table", ColorTable);
  </script>
</Layout>
