@use "../../../scss/tokens/" as t;

$border-secondary: 1px solid t.$color-neutral-10;

:host {
  .tab-container {
    overflow: auto;
    padding: t.$space-4;
  }

  ul[role="tablist"] {
    list-style: none;
    padding: 0;
    margin: 0;
    display: inline-flex;
    flex-wrap: nowrap;
    align-items: end;
    gap: t.$space-4;
    min-width: 100%;
    border-bottom: $border-secondary;
  }

  a[role="tab"] {
    box-sizing: border-box;
    padding-inline: var(--kth-0-button-padding-inline);
    padding-block: var(--kth-0-button-padding-block);
    white-space: nowrap;
    display: block;
  }

  .kth-0-secondary a[role="tab"] {
    color: t.$color-neutral-10;
    border: $border-secondary;
    border-radius: t.border-radius(8 8 0 0);
    margin-bottom: -1px;

    // -1 padding because of border
    padding-block-start: calc(var(--kth-0-button-padding-block) - 1px);
    padding-block-end: calc(var(--kth-0-button-padding-block));

    &[aria-selected="false"] {
      background: t.$color-neutral-2;
    }

    &[aria-selected="true"] {
      background: t.$color-neutral-0;
      padding-block-start: calc(
        var(--kth-0-button-padding-block) + #{t.$space-8} - 1px
      );
      border-bottom: 1px solid transparent;
    }
  }

  .kth-0-tertiary a[role="tab"] {
    margin-bottom: -1px;

    // -1 padding because of border
    padding-block-start: calc(var(--kth-0-button-padding-block) + 1px);

    &[aria-selected="false"] {
      color: t.$color-neutral-10;
    }

    &[aria-selected="true"] {
      padding-block-end: calc(var(--kth-0-button-padding-block) - 3px);
      border-bottom: 3px solid t.$color-primary-5;
    }
  }
}
