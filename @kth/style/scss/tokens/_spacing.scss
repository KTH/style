@use "sass:list";
@use "sass:map";
/// Design Tokens for spacing

$space-0: 0;
$space-2: 0.125rem;
$space-4: 0.25rem;
$space-6: 0.375rem;
$space-8: 0.5rem;
$space-12: 0.75rem;
$space-16: 1rem;
$space-20: 1.25rem;
$space-24: 1.5rem;
$space-32: 2rem;
$space-40: 2.5rem;
$space-48: 3rem;
$space-64: 4rem;
$space-80: 5rem;

// Convinience map that stores every value. Used internally
$_all_spaces: (
  0: $space-0,
  2: $space-2,
  4: $space-4,
  6: $space-6,
  8: $space-8,
  12: $space-12,
  16: $space-16,
  20: $space-20,
  24: $space-24,
  32: $space-32,
  40: $space-40,
  48: $space-48,
  64: $space-64,
  80: $space-80,
);

/// Converts a single KTH Style space value to rem.
/// Throws an Error if the argument is not part of the valid spaces
///
/// This function is used internally.
@function _space_to_rem($space) {
  @if map.get($_all_spaces, $space) == null {
    @error "#{$space} is not a valid spacing. Use one of the following instead: #{$_all_spaces}";
  }

  @return map.get($_all_spaces, $space);
}

/// Converts a list of "KTH Style space" value to their rem values.
/// Throws an Error if any element is not valid
///
/// This function is used internally.
@function _spaces_to_rem($list-of-spaces) {
  $list-of-rem: ();

  @each $element in $list-of-spaces {
    $list-of-rem: list.append($list-of-rem, _space_to_rem($element));
  }

  @return $list-of-rem;
}

/// Converts a list of "KTH Style padding" values to actual CSS measurements.
@function padding($list) {
  @return _spaces_to_rem($list);
}

/// Converts a list of "KTH Style margin" values to actual CSS measurements..
@function margin($list) {
  @return _spaces_to_rem($list);
}

/// Converts a list of "KTH Style gap" values to actual CSS measurements..
@function gap($list) {
  @return _spaces_to_rem($list);
}

@function border-radius($list) {
  @return _spaces_to_rem($list);
}

/// Returns a "calc($padding - $border)" for each border and padding
@function _padding_minus_border($paddings, $borders) {
  @if list.length($paddings) != list.length($borders) {
    @error "List of paddings and borders should have same length";
  }

  $list-of-paddings: ();

  @for $i from 0 through list.length($paddings) {
    $list-of-paddings: list.append(
      $list-of-paddings,
      calc(#{list.nth($paddings, $i)} - #{list.nth($borders, $i)})
    );
  }

  @return $list-of-paddings;
}

/// Returns both padding and border values
@mixin padding-and-border($suffix, $borders, $paddings) {
  padding#{$suffix}: _padding_minus_border($borders, $paddings);
  border#{$suffix}-width: $borders;
}
