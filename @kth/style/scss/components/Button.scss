@use "../globals.scss" as g;
@use "../variants.scss";

// Variants of Button
// - Intensity: primary, secondary, tertiary, success, danger
// - State: hover, active
// - Size: normal, small
@mixin primary {
  background: g.$blue-5;
  color: g.$white;
  border: none;
  font-weight: 600;

  &:hover {
    background: g.$blue-6;
  }
}

@mixin secondary {
  background: g.$white;
  color: g.$black;
  border: g.$black g.rem(1) solid;

  &:hover {
    background: g.$gray-1;
  }
}

@mixin tertiary {
  background: transparent;
  color: g.$black;
  border: none;
  --interactive-padding-inline: 0;

  &:hover {
    text-decoration: underline;
  }
}

@mixin success {
  background: g.$green-5;
  color: g.$white;
  border: none;
  font-weight: 600;

  &:hover {
    background: g.$green-6;
  }
}

@mixin danger {
  background: g.$red-60;
  color: g.$white;
  border: none;
  font-weight: 600;

  &:hover {
    background: g.$red-61;
  }
}

@mixin with-icon {
  gap: g.rem(8);

  svg {
    // TODO: these values are equal to text line-height
    width: g.rem(24);
    height: g.rem(24);
    fill: currentColor;
  }
}

// TODO. Future feature: Set to false if you only want to use the mixin
// $with-class: true !default;
.#{g.$prefix}-button {
  display: flex;
  align-items: center;
  border-radius: g.rem(8);
  min-height: var(--#{g.$prefix}-ui-min-height, 0);
  min-width: var(--#{g.$prefix}-ui-min-width, 0);
  padding-block: var(--#{g.$prefix}-ui-padding-block, 0);
  padding-inline: var(--#{g.$prefix}-ui-padding-inline, 0);

  &.primary {
    @include primary();
  }

  &.secondary {
    @include secondary();
  }

  &.tertiary {
    @include tertiary();
  }

  &.success {
    @include success();
  }

  &.danger {
    @include danger();
  }

  &.with-icon {
    @include with-icon();
  }
}
